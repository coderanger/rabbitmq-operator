name: main
on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.33

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      TEST_RABBITMQ: http://guest:guest@localhost:15672

    services:
      rabbitmq:
        image: rabbitmq:management
        ports:
        - 15672:15672
        - 5672:5672
        - 5671:5671

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: Install Kubebuilder
        id: install-kubebuilder
        run: |
          os=$(go env GOOS)
          arch=$(go env GOARCH)
          curl -L https://go.kubebuilder.io/dl/2.3.1/${os}/${arch} | tar -xz -C /tmp/
          sudo mv /tmp/kubebuilder_2.3.1_${os}_${arch} /usr/local/kubebuilder
      - run: make test

  build:
    name: Container Build
    runs-on: ubuntu-latest
    needs:
    - test
    - lint
    if: github.event_name != 'pull_request'

    steps:
    - uses: actions/checkout@v2
    - name: Docker Prep
      id: prep
      run: |
        DOCKER_IMAGE=ghcr.io/coderanger/rabbitmq-operator
        VERSION=edge
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        fi
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Github Container Registry
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.prep.outputs.tags }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
